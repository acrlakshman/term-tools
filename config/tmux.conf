# Use ZSH as shell
set-option -g default-shell /bin/zsh

# Enable mouse control
set-option -g mouse on

# Extend scrollback buffer size
set-option -g history-limit 5000

# 256 color support
set -g default-terminal "screen-256color"

# Remap tmux key to C-a
unbind C-b
set-option -g prefix C-a
bind-key C-a send-prefix

# Destroy session when no clients are attached
set-option -g destroy-unattached

# Start counting at 1
set -g base-index 1
setw -g pane-base-index 1

# Use VI keys in copy mode
set-window-option -g mode-keys vi

# Window switching
bind -n 'M-t'  new-window
bind -n 'M-['  previous-window
bind -n 'M-]'  next-window

# Ctrl + home row -> home/end/pgup/pgdown
bind -n 'C-h' send-keys home
bind -n 'C-j' send-keys pagedown
bind -n 'C-k' send-keys pageup
bind -n 'C-l' send-keys end

bind -n 'M-K' copy-mode -u
bind -T copy-mode-vi "M-K" send-keys -X halfpage-up
bind -T copy-mode-vi "M-J" send-keys -X halfpage-down

# Alt + home row -> pane / VIM split navigation
# Based on https://github.com/christoomey/vim-tmux-navigator
not_tmux="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind -n 'M-h' if-shell "$not_tmux" 'send-keys M-h' 'select-pane -L'
bind -n 'M-j' if-shell "$not_tmux" 'send-keys M-j' 'select-pane -D'
bind -n 'M-k' if-shell "$not_tmux" 'send-keys M-k' 'select-pane -U'
bind -n 'M-l' if-shell "$not_tmux" 'send-keys M-l' 'select-pane -R'
bind -n 'M-.' if-shell "$not_tmux" 'send-keys M-.' 'split-window -h -c "#{pane_current_path}"'
bind -n 'M-,' if-shell "$not_tmux" 'send-keys M-,' 'split-window -v -c "#{pane_current_path}"'

# Pane navigation

bind -n 'M-q' if-shell "$not_tmux" 'send-keys M-q' 'kill-pane'

bind -T copy-mode-vi 'M-h' select-pane -L
bind -T copy-mode-vi 'M-j' select-pane -D
bind -T copy-mode-vi 'M-k' select-pane -U
bind -T copy-mode-vi 'M-l' select-pane -R

# Vi copy mode
set-window-option -g mode-keys vi

# shortcut to reload the configuration file
bind r source-file ~/.tmux.conf

# Don't delay the escape key
set -s escape-time 0

# Tomorrow night color scheme
set -g window-style 'fg=colour250,bg=colour235'
setw -g status-style bg=default

# Status bar
set -g status-position top
set -g status-right-length 100
setw -g status-right ''
setw -g status-left ''

# Make background window look like white tab
set-window-option -g window-status-style bg=default
set-window-option -g window-status-style fg=white
set-window-option -g window-status-style none
set-window-option -g window-status-format '#[fg=#6699cc,bg=colour235]#{?window_bell_flag,#[blink],} #I #[fg=#999999,bg=#2d2d2d] #W #[default]'

# Make foreground window look like bold yellow foreground tab
set-window-option -g window-status-current-style none
set-window-option -g window-status-current-format '#[fg=#f99157,bg=#2d2d2d] #I #[fg=#cccccc,bg=#393939] #W #[default]'

## pane border and colors
set -g pane-active-border-style bg=default
set -g pane-active-border-style fg="#373b41"
set -g pane-border-style bg=default
set -g pane-border-style fg="#373b41"

# Only show status bar if there is at least 1 tab
set-hook -g window-linked "if -F '#{!=:#{session_windows},1}' 'set status on'"
set-hook -g window-unlinked "if -F '#{==:#{session_windows},1}' 'set status off'"
set-hook -g after-new-session "set status off"
