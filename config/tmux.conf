# Use ZSH as shell
set-option -g default-shell /bin/zsh

# 256 color support
set -g default-terminal "screen-256color"

# Remap key
unbind C-b
set-option -g prefix C-a
bind-key C-a send-prefix

# Start counting at 1
set -g base-index 1
setw -g pane-base-index 1

# Window switching
bind -n M-Left  previous-window
bind -n M-Right next-window
bind -n M-t     new-window
bind -n ô       new-window

# Pane splitting
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

bind -n 'M-[' if-shell "$is_vim" 'send-keys Escape [' 'split-window -h -c "#{pane_current_path}"'
bind -n 'Û'   if-shell "$is_vim" 'send-keys Escape [' 'split-window -h -c "#{pane_current_path}"'
bind -n 'M-]' if-shell "$is_vim" 'send-keys Escape ]' 'split-window -v -c "#{pane_current_path}"'
bind -n 'Ý'   if-shell "$is_vim" 'send-keys Escape ]' 'split-window -v -c "#{pane_current_path}"'

# Pane navigation
bind -n 'M-h' if-shell "$is_vim" 'send-keys M-h' 'select-pane -L'
bind -n 'è'   if-shell "$is_vim" 'send-keys M-h' 'select-pane -L'
bind -n 'M-j' if-shell "$is_vim" 'send-keys M-j' 'select-pane -D'
bind -n 'ê'   if-shell "$is_vim" 'send-keys M-j' 'select-pane -D'
bind -n 'M-k' if-shell "$is_vim" 'send-keys M-k' 'select-pane -U'
bind -n 'ë'   if-shell "$is_vim" 'send-keys M-k' 'select-pane -U'
bind -n 'M-l' if-shell "$is_vim" 'send-keys M-l' 'select-pane -R'
bind -n 'ì'   if-shell "$is_vim" 'send-keys M-l' 'select-pane -R'

bind -T copy-mode-vi 'M-h' select-pane -L
bind -T copy-mode-vi 'è'   select-pane -L
bind -T copy-mode-vi 'M-j' select-pane -D
bind -T copy-mode-vi 'ê'   select-pane -D
bind -T copy-mode-vi 'M-k' select-pane -U
bind -T copy-mode-vi 'ë'   select-pane -U
bind -T copy-mode-vi 'M-l' select-pane -R
bind -T copy-mode-vi 'ì'   select-pane -R

# Scrolling support on XTerm
set -g terminal-overrides 'xterm*:smcup@:rmcup@'

# Vi copy mode
set-window-option -g mode-keys vi

# shortcut to reload the configuration file
bind r source-file ~/.tmux.conf

# Don't delay the escape key
set -s escape-time 0

# Tomorrow night color scheme
set -g window-style 'fg=colour250,bg=colour235'
setw -g status-style bg=default

# Status bar
set -g status-position top
set -g status-right-length 100
setw -g status-right ''
setw -g status-left ''

# Make background window look like white tab
set-window-option -g window-status-style bg=default
set-window-option -g window-status-style fg=white
set-window-option -g window-status-style none
set-window-option -g window-status-format '#[fg=#6699cc,bg=colour235]#{?window_bell_flag,#[blink],} #I #[fg=#999999,bg=#2d2d2d] #W #[default]'

# Make foreground window look like bold yellow foreground tab
set-window-option -g window-status-current-style none
set-window-option -g window-status-current-format '#[fg=#f99157,bg=#2d2d2d] #I #[fg=#cccccc,bg=#393939] #W #[default]'

## pane border and colors
set -g pane-active-border-style bg=default
set -g pane-active-border-style fg="#373b41"
set -g pane-border-style bg=default
set -g pane-border-style fg="#373b41"

# Only show status bar if there is at least 1 tab
set-hook -g window-linked "if -F '#{!=:#{session_windows},1}' 'set status on'"
set-hook -g window-unlinked "if -F '#{==:#{session_windows},1}' 'set status off'"
set-hook -g after-new-session "set status off"
