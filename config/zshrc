# Load oh-my-zsh
ZSH=$HOME/.oh-my-zsh
ZSH_THEME="wjakob"
plugins=(git zsh-syntax-highlighting)
DISABLE_AUTO_UPDATE="true"
source $ZSH/oh-my-zsh.sh
source ~/.term-tools/config/shrc.sh

autoload up-line-or-beginning-search
autoload down-line-or-beginning-search
zle -N up-line-or-beginning-search
zle -N down-line-or-beginning-search
alias grpe=grep

# OSX / iTerm2 key bindings
bindkey $terminfo[kbs]   backward-delete-char           # Backspace
bindkey $terminfo[kdch1] delete-char                    # Delete
bindkey $terminfo[khome] beginning-of-line              # Home
bindkey $terminfo[kend]  end-of-line                    # End
bindkey $terminfo[kpp]   up-line-or-history             # PageUp
bindkey $terminfo[knp]   down-line-or-history           # PageDown
bindkey $terminfo[kcuu1] up-line-or-beginning-search    # Down
bindkey $terminfo[kcud1] down-line-or-beginning-search  # Up
bindkey $terminfo[kcub1] backward-char                  # Left
bindkey $terminfo[kcuf1] forward-char                   # Right

bindkey -M vicmd $terminfo[khome] beginning-of-line     # Home
bindkey -M vicmd $terminfo[kend]  end-of-line           # End

# Search paths
export PATH=/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin

function of() {
  osascript <<EOT
  tell application "OmniFocus"
    parse tasks into default document with transport text "$@"
  end tell
EOT
}

# Support High-DPI in Qt5 apps
export QT_AUTO_SCREEN_SCALE_FACTOR=1

# Convenience flags to switch between release and debug mode
alias cmake_deb='cmake $@ -GNinja -DCMAKE_BUILD_TYPE=DEBUG'
alias cmake_rel='cmake $@ -GNinja -DCMAKE_BUILD_TYPE=RELEASE'

# CMake aliases for various compilers
alias cmake_gcc='cmake $@ -GNinja -DCMAKE_CXX_COMPILER=g++-7 -DCMAKE_C_COMPILER=gcc-7'
alias cmake_clang='cmake $@ -GNinja -DCMAKE_C_COMPILER=clang -DCMAKE_CXX_COMPILER=clang++'
alias cmake_icpc='cmake $@ -GNinja -DCMAKE_C_COMPILER=icc -DCMAKE_C_FLAGS="-gcc-name=gcc-5 -cxxlib=/usr/local" -DCMAKE_CXX_COMPILER=icpc -DCMAKE_CXX_FLAGS="-gxx-name=g++-5 -cxxlib=/usr/local"'
alias cmake_clean='rm -rf CMakeCache.txt CMakeFiles'

export BROWSER="/Applications/Google Chrome.app/Contents/MacOS/Google Chrome"
export NINJA_STATUS="[%u/%r/%f] "

export LC_ALL=en_US.UTF-8
export LANG=en_US.UTF-8

# Try to place all shared libraries in the same 4GB block to avoid indirect call penalties on Xeon Phi
export LD_PREFER_MAP_32BIT_EXEC=1

# Don't create ~/intel directory after every compiler invocation
export INTEL_DISABLE_ISIP=1

# Don't make core dumps by default
ulimit -c 0

source /opt/intel/bin/compilervars.sh intel64
source /opt/intel/vtune_amplifier_xe/amplxe-vars.sh quiet

# Emulate pbcopy/pbpaste on OSX
case "$OSTYPE" in
  linux*)
        alias pbcopy='xclip -selection clipboard'
        alias pbpaste='xclip -selection clipboard -o'
        ;;
  *)    ;;
esac

# Other aliases
alias n=ninja
alias python=python3
alias ipython=ipython3
alias pip=pip3
alias octave='octave --no-gui-libs'
alias pdb='python3 -u -m pdb -c continue'
function skim () {
    /Applications/Skim.app/Contents/MacOS/Skim $@ &> /dev/null &
}

# Don't include "_something" AppleDouble files in tar files, etc.
export COPYFILE_DISABLE=1
